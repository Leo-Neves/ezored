// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from proj.djinni

#include "com/ezored/net/http/EZRHttpClientPlatformService.hpp"  // my header
#include "com/ezored/net/http/EZRHttpRequest.hpp"
#include "com/ezored/net/http/EZRHttpResponse.hpp"

namespace djinni_generated {

EZRHttpClientPlatformService::EZRHttpClientPlatformService() : ::djinni::JniInterface<::ezored::net::http::HttpClientPlatformService, EZRHttpClientPlatformService>("com/ezored/net/http/HttpClientPlatformService$CppProxy") {}

EZRHttpClientPlatformService::~EZRHttpClientPlatformService() = default;


CJNIEXPORT void JNICALL Java_com_ezored_net_http_HttpClientPlatformService_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::ezored::net::http::HttpClientPlatformService>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_com_ezored_net_http_HttpClientPlatformService_00024CppProxy_native_1doRequest(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_request)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ezored::net::http::HttpClientPlatformService>(nativeRef);
        auto r = ref->doRequest(::djinni_generated::EZRHttpRequest::toCpp(jniEnv, j_request));
        return ::djinni::release(::djinni_generated::EZRHttpResponse::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

}  // namespace djinni_generated
