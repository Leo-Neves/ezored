// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from proj.djinni

#include "com/ezored/holiday/HolidayPaisRepository.hpp"  // my header
#include "Marshal.hpp"
#include "com/ezored/holiday/HolidayPais.hpp"

namespace djinni_generated {

HolidayPaisRepository::HolidayPaisRepository() : ::djinni::JniInterface<::ezored::holiday::PaisRepository, HolidayPaisRepository>("com/ezored/holiday/PaisRepository$CppProxy") {}

HolidayPaisRepository::~HolidayPaisRepository() = default;


CJNIEXPORT void JNICALL Java_com_ezored_holiday_PaisRepository_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::ezored::holiday::PaisRepository>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_com_ezored_holiday_PaisRepository_00024CppProxy_findAll(JNIEnv* jniEnv, jobject /*this*/)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::ezored::holiday::PaisRepository::findAll();
        return ::djinni::release(::djinni::List<::djinni_generated::HolidayPais>::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_com_ezored_holiday_PaisRepository_00024CppProxy_getBySigla(JNIEnv* jniEnv, jobject /*this*/, jstring j_siglaPais)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::ezored::holiday::PaisRepository::getBySigla(::djinni::String::toCpp(jniEnv, j_siglaPais));
        return ::djinni::release(::djinni_generated::HolidayPais::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

}  // namespace djinni_generated
