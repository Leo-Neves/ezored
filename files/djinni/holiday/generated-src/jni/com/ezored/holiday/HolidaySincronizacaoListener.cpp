// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from proj.djinni

#include "com/ezored/holiday/HolidaySincronizacaoListener.hpp"  // my header
#include "Marshal.hpp"

namespace djinni_generated {

HolidaySincronizacaoListener::HolidaySincronizacaoListener() : ::djinni::JniInterface<::ezored::holiday::SincronizacaoListener, HolidaySincronizacaoListener>() {}

HolidaySincronizacaoListener::~HolidaySincronizacaoListener() = default;

HolidaySincronizacaoListener::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

HolidaySincronizacaoListener::JavaProxy::~JavaProxy() = default;

void HolidaySincronizacaoListener::JavaProxy::sucesso() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::HolidaySincronizacaoListener>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_sucesso);
    ::djinni::jniExceptionCheck(jniEnv);
}
void HolidaySincronizacaoListener::JavaProxy::falha(const std::string & c_mensagem) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::HolidaySincronizacaoListener>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_falha,
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_mensagem)));
    ::djinni::jniExceptionCheck(jniEnv);
}

}  // namespace djinni_generated
